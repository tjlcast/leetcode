/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    
    private String __author__ = "tangjialiang" ;
    private String __V__ = "success_V" ;
    private String __tips__ = "节点可能存在小于零的情况：dp思想，节点为该节点下的最大sum，若小于0则可以舍去该节点" ;
    
    
    private int maxSum = -9999 ;
    
    public Solution() {
        this.maxSum = -9999 ;
    }
    
    public int maxPathSum(TreeNode root) {
        dfs(root) ;
        return maxSum ;
    }
    
    private int dfs(TreeNode root) {
        if (root == null) {return 0 ;}
        
        int curVal = root.val ;
        int leftSum = dfs(root.left) ;
        if (leftSum < 0) leftSum = 0 ;
        int rightSum = dfs(root.right) ;
        if (rightSum < 0) rightSum = 0 ;
        
        if (maxSum < curVal+leftSum+rightSum) {
            maxSum = curVal + leftSum + rightSum ;
        }
        return leftSum > rightSum ? curVal+leftSum : curVal+rightSum ;
    }
}
