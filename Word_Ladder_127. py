class Solution(object):
    
    __author__ = "tangjialiang"
    __V__ = "time_out_V"
    
    def ladderLength(self, beginWord, endWord, wordList):
        """
        :type beginWord: str
        :type endWord: str
        :type wordList: Set[str]
        :rtype: int
        """
        wordList = list(wordList)
        return self.work(beginWord, endWord, wordList)
    
    def work(self, beginWord, endWord, wordList):
        #initial map
        #if wordList.index(beginWord)==-1
        #    wordList.append(beginWord)
        #wordList.append(endWord)
        
        strLen = len(wordList)
        map = [[0 for col in range(0, strLen)] for row in range(0, strLen)]
        flag = [0 for col in range(0, strLen)]
        
        for i in range(0, strLen): 
            for j in range(0, strLen): 
                if self.isTranform(wordList[i], wordList[j]):
                    map[i][j] = 1
                    map[j][i] = 1
        
        print map
        
        #bfs
        print wordList
        s = wordList.index(beginWord)
        l = wordList.index(endWord)
        print "Hl: " + str(l)
        queue = list() 
        queue.append(s)
        
        fatherNode = [-1 for n in range(0, strLen)]
        
        while len(queue)!=0:
            
            if fatherNode[l] != -1:
                break
            
            curNode = queue.pop(0)
            flag[curNode] = 1
            
            for node in range(0, len(wordList)):
                if map[curNode][node]==1 and node!=curNode and flag[node]==0:
                    fatherNode[node] = curNode
                    queue.append(node)
        
        print fatherNode
        print 'l: ' + str(l)
        print 's: ' + str(s)
        if fatherNode[l]==-1:
            return 0 
        
        ans = 0
        while l!=-1:
            print "l: " + str(l)
            l = fatherNode[l]
            ans+=1
        return ans 
    
    def isTranform(self, str1, str2):
        strLen = len(str1) if len(str1) > len(str2) else len(str2)
        diffNum = 0 
        for i in range(0, strLen):
            if str1[i] != str2[i]:
                diffNum+=1
        if diffNum != 1:
            return False
        return True 
